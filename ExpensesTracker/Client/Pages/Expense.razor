@page "/expense"
@page "/expense/{id:int}"

@using ExpensesTracker.Client.Services.DateStructureService

@inject IMonthlyExpService MonthlyExpService

@if (Id == null)
{
	<PageTitle>Add a new expense</PageTitle>
	<h3>Add a new expense</h3>
}
else
{
	<PageTitle>Edit</PageTitle>
	<h3>Edit</h3>
}

<EditForm Model="expense" OnSubmit="SubmitButton">
	<div>
		<label for="money"> Money</label>
		<InputNumber id="money" @bind-Value="expense.Money"></InputNumber>
	</div>
	<div>
		<label for="comment"> Comment</label>
		<InputText id="comment" @bind-Value="expense.Comment"></InputText>
	</div>
	<div>
		<label for="category"> Category</label>
		<InputSelect @bind-Value="expense.CategoryId">
			@foreach(var category in MonthlyExpService.Categories){
				<option value="@category.Id">@category.Title</option>
			}
		</InputSelect>
	</div>
	<div>
		<label> Date </label>
	<InputSelect @bind-Value="expense.Year">
        @*<option selected disabled="true">--Select Year--</option>*@
        @foreach (var year in years)
        {
            <option value="@year">@year</option>
        }
    </InputSelect>
		<InputSelect @bind-Value="expense.Month">
			@*<option selected disabled="true">--Select Month--</option>*@
        @foreach (var month in Enum.GetValues(typeof(Dates.Months)))
        {
            <option value="@((int)month)">@month</option>
        }
    </InputSelect>
	</div>
	<br />
	<button type="submit" class="btn btn-primary">@buttonText</button>
</EditForm>
@code {

	[Parameter]
	public int? Id { get; set; }

	MonthlyExp expense = new MonthlyExp { Category = new Category() };

	IEnumerable<int> years = new Dates().years;

	string buttonText = string.Empty;
	protected override async Task OnInitializedAsync()
	{
		if(Id == null){
			buttonText = "Save new entry";
		}
		else{
			buttonText = "Update entry";
		}
		await MonthlyExpService.GetCategories();
	}

	protected override async Task OnParametersSetAsync()
	{	
		if(Id == null){ // when is it null? (maybe make Id not nullable)
		}
		else{
			expense = await MonthlyExpService.GetSingleExp((int)Id); 
		}
	}

	async Task SubmitButton()
	{ 

	}
}