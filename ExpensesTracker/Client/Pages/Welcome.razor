@page "/"
@inject IExpensesService ExpensesService
@inject IIncomesService IncomesService

@if (user != null)
{
    <h3>Welcome back, @user.nickname!</h3>
    <br />
    <br />
    <h4 style="background-color: #fff88b; padding: 10px; border: 1px solid #8e8a4a;"> Balance: @user.balance€</h4>
    <h4 style="background-color: #cfc ; padding: 10px; border: 1px solid green;"> Income: @recentIncome € </h4>
    <h4 style="background-color: #f5818e ; padding: 10px; border: 1px solid red;"> Expenses: @recentExpenses €</h4>
    <br />


    <button @onclick="e => this.Collapsed = !this.Collapsed">
        More details: @(this.Collapsed ? "+" : "-")
    </button>

    @if (!Collapsed)
    {
        @foreach (var record in LazySheet.Value)
        {
            <div>
                @if (record.type == "Expense")
                {
                    <span style="color:red">@record.type:&ensp;</span>
                }
                else
                {
                    <span style="color:lightgreen">@record.type:&ensp;&ensp;</span>
                }
                @record.amount€
                @record.date
            </div>
        }

    }
}


@code {
    User user;
    public static event Action<int> Startup;
    Lazy<List<User.Record>> LazySheet = new Lazy<List<User.Record>>();
    public bool Collapsed = true;
    double recentExpenses, recentIncome;

    protected override async Task OnInitializedAsync()
    {
        await ExpensesService.GetExpenses();
        await ExpensesService.GetCategories();
        await IncomesService.GetIncomes();
        Startup.Invoke(0);
    }

    public Welcome()
    {
        Startup += TempUsers;
        Startup += LoadUser;
        Startup += LoadRecent;
        Startup += LoadSheet;
    }

    public void LoadUser(int i)
    {
        user = User.GetUser(i);
    }

    public void LoadSheet(int i)
    {
        LazySheet = new Lazy<List<User.Record>>(() => User.History(i));
    }

    public void LoadRecent(int i)
    {
        recentExpenses = User.getRecentExpenses(i);
        recentIncome = User.getRecentIncome(i);
    }

    public void TempUsers(int i)
    {
        new User("Linas", "2002-05-12", "linas.jann@gmail.com", balance: 2000);
        User.setExpenses(i, ExpensesService.AllExpenses);
        User.setIncome(i, IncomesService.AllIncomes);

        new User("Deniza", "2002-04-12", "deniza@gmail.com");
        new User("Jokubas", "2002-11-12", "jokubas@gmail.com");

    }
}
