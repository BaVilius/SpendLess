@page "/"
@inject IExpensesService ExpensesService
@inject IIncomesService IncomesService

<h3>Welcome, @user.nickname</h3>
<h3>Balance: @user.balance €</h3>

<button @onclick="e => this.Collapsed = !this.Collapsed">
    @(this.Collapsed ? "+" : "-")
</button>

@if (!Collapsed)
{
    @foreach (var record in LazySheet.Value)
    {
        <div>
            @if (record.type == "Expense")
            {
                <span style="color:red">@record.type</span>
            }
            else
            {
                <span style="color:lightgreen">@record.type</span>
            }
            @record.amount € 
            @record.date
        </div>
    }

}





@code {
    User? user;
    public static event Action<int> Startup;
    Lazy<List<User.Record>> LazySheet = new Lazy<List<User.Record>>();
    public bool Collapsed = true;


    protected override async Task OnInitializedAsync()
    {
        await ExpensesService.GetExpenses();
        await ExpensesService.GetCategories();
        await IncomesService.GetIncomes();

        Startup.Invoke(0);

    }

    public Welcome()
    {
        Startup += TempUsers;
        Startup += LoadUser;
        Startup += LoadSheet;
    }

    public void LoadUser(int i)
    {
        user = User.GetUser(i);
    }


    public void LoadSheet(int i)
    {
        LazySheet = new Lazy<List<User.Record>>(() => User.History(i));
    }

    public void TempUsers(int i)
    {
        new User("Linas", "2002-05-12", "linas.jann@gmail.com", balance: 2000);
        User.setExpenses(i, ExpensesService.AllExpenses);
        User.setIncome(i, IncomesService.AllIncomes);

        new User("Deniza", "2002-04-12", "deniza@gmail.com");
        new User("Jokubas", "2002-11-12", "jokubas@gmail.com");

    }

}
