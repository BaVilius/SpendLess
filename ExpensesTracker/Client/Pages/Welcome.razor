@page "/"
@inject IExpensesService ExpensesService
@inject IIncomesService IncomesService

<h3>Welcome, @user.nickname</h3>
<h3>Balance: @user.balance €</h3>

<button @onclick="e => this.Collapsed = !this.Collapsed">
    @(this.Collapsed ? "+" : "-")
</button>

@if (!Collapsed)
{
    @foreach (var record in sheet)
    {
        <div>
            @record.type @record.amount € @record.date
        </div>
    }
}





@code {
    User? user;
    public static event Action<int> Startup;
    List<Record> sheet = new List<Record>();
    public bool Collapsed = true;

    public struct Record
    {
        public string type { get; set; }
        public string date { get; set; }
        public double amount { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        await ExpensesService.GetExpenses();
        await ExpensesService.GetCategories();
        await IncomesService.GetIncomes();

        Startup.Invoke(0);

    }

    public Welcome()
    {
        Startup += TempUsers;
        Startup += LoadUser;
        Startup += LoadSheet;
    }

    public void LoadUser(int i)
    {
        user = User.GetUser(i);
    }
    public void LoadSheet(int i)
    {
        foreach (var expense in user.expenses)
        {
            Record record = new Record();
            record.type = "Expense";
            record.date = expense.Year + "-" + expense.Month + "-" + expense.Day;
            record.amount = expense.Money;
            sheet.Add(record);
        }

        foreach (var income in user.income)
        {
            int day = 0;
            if (day >= 30)
                day = 0;

            Record record = new Record();
            record.type = "Income";
            record.date = income.Year + "-" + income.Month + "-" + day;
            record.amount = income.Money;
            sheet.Add(record);
        }

        sheet = sheet.OrderBy(o => o.date).Reverse().ToList();
    }

    public void TempUsers(int i)
    {
        new User("Linas", "2002-05-12", "linas.jann@gmail.com", balance: 2000);
        User.setExpenses(i, ExpensesService.AllExpenses);
        User.setIncome(i, IncomesService.AllIncomes);

        new User("Deniza", "2002-04-12", "deniza@gmail.com");
        new User("Jokubas", "2002-11-12", "jokubas@gmail.com");

    }

}
