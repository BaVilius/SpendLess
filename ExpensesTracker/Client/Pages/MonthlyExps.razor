@page "/monthlyexp"

@inject IMonthlyExpService MonthlyExpService 

@inject NavigationManager NavigationManager

<PageTitle>Monthly Expenses</PageTitle> <!-- this is how we will define this file in navmenu-->
<h3>Monthly Expenses</h3>

<EditForm Model="categoryName" OnSubmit="CategoryButton">
        <InputSelect @bind-Value="categoryName.Id"> 
            <option value="0" selected disabled="true">--Select Category--</option>
            @foreach (var category in MonthlyExpService.Categories)
            {
                <option value="@category.Id">@category.Title</option>
                @*<option value="@category.Id" ononclick="@CategoryButton()">@category.Title</option>*@
            }
        </InputSelect>
        <button type="submit" class="btn btn-primary">Pick Category</button>
</EditForm>

<table class="table">
    <thead>
        <button class="btn btn-primary" @onclick="AscOrDesc">Order</button>
        <tr>
            <th>Money</th>
            <th>Comment</th>
            <th>Category</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var expense in MonthlyExpService.MonthlyExps) 
        {
            <!-- reading data if foreach loop -->
            <tr>
                <td>@expense.Money</td>
                <td>@expense.Comment</td>
                <td>@expense.Category.Title</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => ShowExp(expense.Id))"><i class="oi oi-pencil"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    protected override async Task OnInitializedAsync() 
    {
        await MonthlyExpService.GetMonthlyExps(); 
        await MonthlyExpService.GetCategories(); //to load data to choicebox
    }

    void ShowExp(int id){
        NavigationManager.NavigateTo($"expense/{id}");
    }

    async Task AscOrDesc()
    {
        await MonthlyExpService.GetOrderedMonthlyExps();
    }

    Category categoryName = new Category{};

    async Task CategoryButton() 
    {
        await MonthlyExpService.ShowCategory(categoryName);
    }
}
